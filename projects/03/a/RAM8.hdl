// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    Mux8Way16(a=bit0out,b=bit1out,c=bit2out,d=bit3out,
              e=bit4out,f=bit5out,g=bit6out,h=bit7out,
              sel=address,out=out);
	      
    Register(in=in,load=load0,out=bit0out);
    Register(in=in,load=load1,out=bit1out);
    Register(in=in,load=load2,out=bit2out);
    Register(in=in,load=load3,out=bit3out);
    Register(in=in,load=load4,out=bit4out);
    Register(in=in,load=load5,out=bit5out);
    Register(in=in,load=load6,out=bit6out);
    Register(in=in,load=load7,out=bit7out);

    DMux8Way(in=load,sel=address,
             a=load0,b=load1,c=load2,d=load3,
	     e=load4,f=load5,g=load6,h=load7);
}
