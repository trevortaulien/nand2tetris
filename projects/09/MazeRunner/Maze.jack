class Maze{
    field int level;

    constructor Maze new() {
        do Output.printString("Enter level number (1-5):");
        let level = Keyboard.readChar();
        return this;
    }

    method void draw() {
        if(level = 49) { do draw_level1(); return; }
        if(level = 50) { do draw_level2(); return; }
        if(level = 51) { do draw_level3(); return; }
        if(level = 52) { do draw_level4(); return; }
        if(level = 53) { do draw_level5(); return; }
        
        // If entry is not valid
        do Output.moveCursor(0,0);
        do Screen.clearScreen();
        do Output.printString("That is not a valid entry.");
        return;
    }

    method void draw_level1() {
        do Screen.clearScreen();
        do Screen.drawRectangle(0,50,40,60);
        do Screen.drawRectangle(30,0,40,30);
        do Screen.drawRectangle(134,0,153,4);
        do Screen.drawRectangle(84,15,93,19);
        do Screen.drawRectangle(60,20,233,29);
        do Screen.drawRectangle(175,13,199,19);
        do Screen.drawRectangle(60,30,69,99);
        do Screen.drawRectangle(15,74,59,83);
        do Screen.drawRectangle(70,86,79,99);
        

        do Output.moveCursor(22,61);
        do Output.printString("END");
        
        return;
    }

    method void draw_level2() {
        do Output.moveCursor(0,0);
        do Screen.clearScreen();
        do Output.printString("Level 2 still in development.");
        return;
    }

    method void draw_level3() {
        do Output.moveCursor(0,0);
        do Screen.clearScreen();
        do Output.printString("Level 3 still in development.");
        return;
    }

    method void draw_level4() {
        do Output.moveCursor(0,0);
        do Screen.clearScreen();
        do Output.printString("Level 4 still in development.");
        return;
    }

    method void draw_level5() {
        do Output.moveCursor(0,0);
        do Screen.clearScreen();
        do Output.printString("Level 5 still in development.");
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

}