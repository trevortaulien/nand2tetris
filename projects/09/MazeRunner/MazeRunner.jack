class MazeRunner{
    field int direction;
    field Square square;
    field Maze maze;

    constructor MazeRunner new(){
        let direction = 0;
        let square = Square.new(1,1,10);
        let maze = Maze.new();
        return this;
    }

    method void run(){
        var int key;
        var boolean exit;
        let exit = false;
        
        
        do maze.levelSelect();
        do square.draw();

        while(~exit){
            while(key = 0){
                let key = Keyboard.keyPressed();
                do moveSquare();
            }  
            if(key = 81)  {let exit = true;}    // q
            if(key = 131) {let direction = 1;}  // up 
            if(key = 133) {let direction = 2;}  // down
            if(key = 130) {let direction = 3;}  // left
            if(key = 132) {let direction = 4;}  // right

            while(~(key = 0)){
                let key = Keyboard.keyPressed();
                do moveSquare();
            }
        }
        return;
    }

    method void moveSquare() {
        if (checkWinner()) { do winner(); }
        if (direction = 1) { do square.moveUp(); }
        if (direction = 2) { do square.moveDown(); }
        if (direction = 3) { do square.moveLeft(); }
        if (direction = 4) { do square.moveRight(); }
        do Sys.wait(10);  // delays the next movement
        return;
   }

   method boolean checkWinner() {
        if( ((square.x_location() + square.size()) > 480) & 
            ((square.y_location() + square.size()) > 231) ) {
               return true;
           }

        return false;
   }

   method void winner(){
        do Output.moveCursor(10,28);
        do Screen.clearScreen();
        do Output.printString("WINNER!");
        return;
   }

    method void dispose(){
        do square.dispose();
        do Memory.deAlloc(this);
        return;
    }
}