function Sieve.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push pointer 0
call Sieve.initializeQueues 1
pop temp 0
push pointer 0
return
function Sieve.mod 0
push argument 0
pop pointer 0
push argument 1
push argument 2
push argument 1
push argument 2
call Math.divide 2
call Math.multiply 2
sub
return
function Sieve.initializeQueues 0
push argument 0
pop pointer 0
call Queue.new 0
pop this 1
call Queue.new 0
pop this 0
push constant 0
return
function Sieve.computeTo 8
push argument 0
pop pointer 0
push argument 1
call Math.sqrt 1
pop local 4
push argument 1
push constant 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 25
call String.new 1
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 50
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
label IF_FALSE0
push pointer 0
call Sieve.initializeQueues 1
pop temp 0
push constant 2
pop local 0
label WHILE_EXP0
push local 0
push argument 1
push constant 1
add
lt
not
if-goto WHILE_END0
push this 0
push local 0
call Queue.pushBack 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
pop local 6
label WHILE_EXP1
push local 6
not
if-goto WHILE_END1
push this 0
call Queue.popFront 1
pop local 1
push this 1
push local 1
call Queue.pushBack 2
pop temp 0
call Queue.new 0
pop local 2
push constant 0
pop local 0
label WHILE_EXP2
push this 0
call Queue.getLength 1
push constant 0
gt
not
if-goto WHILE_END2
push this 0
call Queue.popFront 1
pop local 3
push pointer 0
push local 3
push local 1
call Sieve.mod 3
pop local 7
push local 7
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push local 3
call Queue.pushBack 2
pop temp 0
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 2
pop this 0
push local 1
push local 4
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop local 6
label IF_FALSE2
goto WHILE_EXP1
label WHILE_END1
label WHILE_EXP3
push this 0
call Queue.getLength 1
push constant 0
gt
not
if-goto WHILE_END3
push this 0
call Queue.popFront 1
pop local 1
push this 1
push local 1
call Queue.pushBack 2
pop temp 0
goto WHILE_EXP3
label WHILE_END3
push constant 0
return
function Sieve.reportResults 0
push argument 0
pop pointer 0
push constant 7
call String.new 1
push constant 80
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Queue.print 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
